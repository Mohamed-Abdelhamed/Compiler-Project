from rply import LexerGenerator


class Lexer():
    def __init__(self):
        self.lexer = LexerGenerator()

    def _add_tokens(self):
        # Custom
        self.lexer.add('Class', r'Division')
        self.lexer.add('Inheritance', r'InferedFrom')
        self.lexer.add('Whether Do', r'WhetherDo')
        self.lexer.add('Else', r'Else')
        self.lexer.add('Integer', r'Ire')
        self.lexer.add('SInteger', r'Sire')
        self.lexer.add('Character', r'Clo')
        self.lexer.add('String', r'SetOfClo')
        self.lexer.add('Float', r'FBU')
        self.lexer.add('SFloat', r'SFBU')
        self.lexer.add('Void', r'NoneValue')
        self.lexer.add('Break', r'TerminateThisNow')
        self.lexer.add('Loop', r'RingWhen')
        self.lexer.add('Return', r'BackedValue')
        self.lexer.add('Struct', r'STT')
        self.lexer.add('Check', r'Check')
        self.lexer.add('Case Of', r'CaseOf')
        self.lexer.add('Start Statement', r'Beginning')
        self.lexer.add('End Statement', r'End')
        self.lexer.add('Comment Line', r'\/\-')
        self.lexer.add('Comment Block Start', r'\/\#')
        self.lexer.add('Comment Block End', r'\#\/')
        self.lexer.add('Plus', r'\+')
        self.lexer.add('Minus',r'\-')
        self.lexer.add('Mult',r'\*')
        self.lexer.add('Div',r'\/')
        self.lexer.add('And', r'\&\&')
        self.lexer.add('Or', r'\|\|')
        self.lexer.add('Not',r'\~')
        self.lexer.add('Identical', r'\=\=')
        self.lexer.add('Less-than', r'\<')
        self.lexer.add('Greater-than', r'\>')
        self.lexer.add('Not Equal', r'\!\=')
        self.lexer.add('Less-than or Equal', r'\<\=')
        self.lexer.add('Greater-than or Equal', r'\>\=')
        self.lexer.add('Equal', r'\=')
        self.lexer.add('Dot', r'\.')
        self.lexer.add('Opened Parenthesis', r'\{')
        self.lexer.add('Closed Parenthesis', r'\}')
        self.lexer.add('Opened Bracket', r'\(')
        self.lexer.add('Closed Bracket', r'\)')
        self.lexer.add('ERROR', r'\d\w+')
        self.lexer.add('Number', r'\d+')
        self.lexer.add('Comma', r'\,')
        self.lexer.add('Inclusion', r'Using')
        self.lexer.add('Delimiter', r'\@')
        self.lexer.add('Delimiter', r'\;')
        self.lexer.add('Identifier', r'[a-zA-Z_]\w*')
        self.lexer.add('ERROR', r'[^z+]')

        self.lexer.ignore('\s+')

    def get_lexer(self):
        self._add_tokens()
        return self.lexer.build()
